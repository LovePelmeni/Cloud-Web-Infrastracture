apiVersion: v1
kind: Service 
metadata:
  name: application-internal-service 
  namespace: app-namespace 
spec:
  selector:
    app: application-service 
  ports:
    - name: http 
      port: 8000 
      protocol: TCP 
      targetPort: 8000 

--- 

apiVersion: v1
kind: Deployment 
metadata:
  name: application-deployment 
  namespace: app-namespace 
spec:
  selector:
    matchLabels:
      app: application-service 
  template:
    metadata:
      labels:
        app: application-service 
    spec:
      volumes: 
        - name: nginx-configuration-map 
          configMap: 
            - name: nginx-configuration-map 
              items:
                - key: nginx.conf 
                  subPath: nginx.conf 

      initContainers: 
        - name: nginx-server 
          image: nginx 
          volumeMounts:
            - name: nginx-configuration-map
              subPath: nginx.conf 
              path: /etc/nginx/nginx.conf
              readOnly: true
          ports:
            - containerPort: 8000
              protocol: TCP 
          imagePullPolicy: IfNotPresent

      terminationGracePeriodSeconds: 60
      containers:
        - name: application-container 
          image: crazycoderrr/infrastracture 
          ports:
            - containerPort: 8001
              protocol: TCP 
          envFrom:
            - configMapRef:
                - name: application-config-map 
          imagePullPolicy: IfNotPresent 
--- 

apiVersion: v1
kind: ConfigMap 
metadata:
  name: application-config-map 
  namespace: app-namespace 
data: 
  APPLICATION_HOST: localhost 
  APPLICATION_PORT: 8000 

  FRONT_APPLICATION_HOST: frontapp 
  FRONT_APPLICATION_PORT: 3000

  SUPPORT_EMAIL_ADDRESS: email_manager@gmail.com 
  SUPPORT_EMAIL_PASSWORD: email_manager_password 

  SUPPORT_CLIENT_EMAIL_ADDRESS: email_infra_server@gmail.com 
  SUPPORT_CLIENT_EMAIL_PASSWORD: email_infra_server_password


  # VMware Configuration Source Parameters 

  VMWARE_SOURCE_IP: ""
  VMWARE_SOURCE_USERNAME: "root"
  VMWARE_SOURCE_PASSWORD: ""

  CACHE_STORAGE_HOST: redis 
  CACHE_STORAGE_PORT: 6379 
  CACHE_STORAGE_PASSWORD: redis-password 


--- 

apiVersion: v1
kind: Secret
metadata:
  name: project-secret 
  namespace: app-namespace 
  annotations:
    kubernetes.io/type: "Opaque"
    
stringData:
  SUPPORT_EMAIL_ADDRESS: "email_manager@gmail.com" 
  SUPPORT_EMAIL_PASSWORD: "email_manager_password" 

  SUPPORT_CLIENT_EMAIL_ADDRESS: "email_infra_server@gmail.com" 
  SUPPORT_CLIENT_EMAIL_PASSWORD: "email_infra_server_password"

  VMWARE_SOURCE_IP: "192.268.0.10" # WARNING, DEPENDING ON THE HOST MACHINE, THIS MIGHT BE DIFFERENT
  VMWARE_SOURCE_USER: "vmware_api_user"
  VMWARE_SOURCE_PASSWORD: "vmware_api_password"

  CACHE_STORAGE_HOST: redis 
  CACHE_STORAGE_PORT: 6379 
  CACHE_STORAGE_DATABASE_NUMBER: 0 
  CACHE_STORAGE_PASSWORD: redis-password 


--- 

apiVersion: v1
kind: ConfigMap 
metadata:
  name: nginx-configuration-map 
  namespace: app-namespace 
data:
  nginx.conf: | 
    events {
      worker_connections 1024;
    }
    http {
      upstream application_upstream {
        server localhost:8001;
      }
      server {
        listen 8000; 
        location / {
          proxy_pass http://application_upstream; 
          proxy_set_header Host $http_host; 
          proxy_set_header Upgrade $http_upgrade; 

          if ($request_method = "OPTIONS") {
            add_header Access-Control-Allow-Origin "*"; 
            add_header Access-Control-Allow-Credentials "true"; 
            return 200;
          }
          add_header Access-Control-Allow-Origin "*"; 
          add_header Access-Control-Allow-Credentials "true"; 
        }
      }
    }

